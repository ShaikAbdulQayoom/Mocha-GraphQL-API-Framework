{
  "stats": {
    "suites": 1,
    "tests": 4,
    "passes": 4,
    "pending": 0,
    "failures": 0,
    "start": "2024-01-18T06:04:43.657Z",
    "end": "2024-01-18T06:04:45.926Z",
    "duration": 2269,
    "testsRegistered": 4,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "4a265015-9b13-470b-bb4d-8292453dff77",
      "title": "",
      "fullFile": "C:\\Users\\DELL\\Downloads\\AsbApiAutomation\\GraphqlTests\\Chaining2-tests.js",
      "file": "\\GraphqlTests\\Chaining2-tests.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c157d0e6-3afb-474c-82f7-93126da90e84",
          "title": "GraphQL FUNCTIONS API CRUD Tests",
          "fullFile": "C:\\Users\\DELL\\Downloads\\AsbApiAutomation\\GraphqlTests\\Chaining2-tests.js",
          "file": "\\GraphqlTests\\Chaining2-tests.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"GraphQL FUNCTIONS API CRUD Tests\"",
              "fullTitle": "GraphQL FUNCTIONS API CRUD Tests \"before each\" hook in \"GraphQL FUNCTIONS API CRUD Tests\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "authorizationHeader = {\n  'Authorization': `eyJraWQiOiJJTjhraElkamVvQjhUR1NrMnk1UWhtNE5SWkJNLWpLLWhOWWpsVzNqa19BIiwiYWxnIjoiUlMyNTYifQ.eyJ2ZXIiOjEsImp0aSI6IkFULnBzbmx6Y3FHTlpBU1h5YWNQSmRYcG9ibGt1d3NlT1FSaTdjZ1NhbVhoOW8ub2FyMXp4MWE2OWhiMXJXYm0yOTciLCJpc3MiOiJodHRwczovL2VtbWVzLm9rdGEuY29tL29hdXRoMi9kZWZhdWx0IiwiYXVkIjoiYXBpOi8vZGVmYXVsdCIsImlhdCI6MTcwNTU1NzAxMCwiZXhwIjoxNzA1NTYwNjEwLCJjaWQiOiIwb2EydTkxbnY2a0ROaXdLdTI5NyIsInVpZCI6IjAwdWhvMWJsY291MHAwQ1JkMjk3Iiwic2NwIjpbIm9mZmxpbmVfYWNjZXNzIiwicHJvZmlsZSIsIm9wZW5pZCIsImVtYWlsIl0sImF1dGhfdGltZSI6MTcwNTU1NjkyMSwic3ViIjoicy5xYXlvb21AZW1tZXMuY29tIn0.ofNeMJmeag5OGEK_PtsJNmHHtuLIT3uemKNzhQkddP6Zir5N3sK-8KSvIcKsinrn_1SfsWaOoV4nij54t_kcwCuBdZpoASEEIHtDTonWMIQSmyVU5WJS2bzgGP-6UeDtDuCbw_NtZmDSjTaQaHtqDGS7ALdxqxnIKc58xW0PaqkUjYyLuR6YV3-mddzJCmWCL3l2o37wY93pTvBLJeRzPZClYCSA70zIGUuA60JPSFo7w967facQ6oWLzKIEHjkxn-4CN6ve8G_IKRzsQ2VpTn5FcxsICOk_pPjUMLUCKj0e_YQYTuI9cofC-A1870EFVdhGEVOqWui6ISBpe7OEwQ`,\n  'Content-Type': 'application/json',\n};\ngraphqlEndpoint = \"https://dev-sb-api.advantage-eclinical.com/studyBuilder\";",
              "err": {},
              "uuid": "b7779e9d-9e20-42b8-aadc-c23105ec6261",
              "parentUUID": "c157d0e6-3afb-474c-82f7-93126da90e84",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "should create a resource",
              "fullTitle": "GraphQL FUNCTIONS API CRUD Tests should create a resource",
              "timedOut": false,
              "duration": 975,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const queryPath = 'C:/Users/DELL/Downloads/AsbApiAutomation/Graphql_queries/Functions/CreateFunction.graphql';\nconst query = await fs.readFile(queryPath, 'utf8');\nconst variablesPath = 'C:/Users/DELL/Downloads/AsbApiAutomation/Graphql_variables/Functions_var/CreateFunction.json';\nconst variables = JSON.parse(await fs.readFile(variablesPath, 'utf8'));\ntry {\n  const createResponse = await axios.post(\n    graphqlEndpoint,\n    { query, variables },\n    {\n      headers: authorizationHeader\n    }\n  );\n  console.log(createResponse);\n  console.log(JSON.stringify(createResponse.data, null, 2));\n  expect(createResponse.status).to.equal(200);\n} catch (error) {\n  console.error('GraphQL Error:', error.message);\n  console.log('GraphQL Response Data:', JSON.stringify(error.response?.data, null, 2));\n  throw error;\n}",
              "err": {},
              "uuid": "7fae814e-892d-4ae2-9619-fc79360c257c",
              "parentUUID": "c157d0e6-3afb-474c-82f7-93126da90e84",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should retrieve the created resource",
              "fullTitle": "GraphQL FUNCTIONS API CRUD Tests should retrieve the created resource",
              "timedOut": false,
              "duration": 274,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const queryPath = 'C:/Users/DELL/Downloads/AsbApiAutomation/Graphql_queries/Functions/GetFunction.graphql';\nconst query = await fs.readFile(queryPath, 'utf8');\nconst variablesPath = 'C:/Users/DELL/Downloads/AsbApiAutomation/Graphql_variables/Functions_var/GetFunction.json';\nconst variables = JSON.parse(await fs.readFile(variablesPath, 'utf8'));\ntry {\n  const retrieveResponse = await axios.post(\n    graphqlEndpoint,\n    { query, variables },\n    {\n      headers: authorizationHeader\n    }\n  );\n  expect(retrieveResponse.status).to.equal(200);\n  expect(retrieveResponse.data).to.have.property('data');\n  const functions = retrieveResponse.data.data.functions;\n  expect(functions).to.be.an('array');\n  expect(functions).to.have.length.greaterThan(0);\n  const targetFunctionName = '12745';\n  const targetFunction = functions.find(func => func.name === targetFunctionName);\n  expect(targetFunction, `Function with name '${targetFunctionName}' not found`).to.not.be.undefined;\n  retrievedFunctionId = targetFunction.functionid;\n  console.log(`Function ID for ${targetFunctionName}:`, retrievedFunctionId);\n} catch (error) {\n  console.error('GraphQL Error:', error.message);\n  console.log('GraphQL Response Data:', JSON.stringify(error.response?.data, null, 2));\n  throw error;\n}",
              "err": {},
              "uuid": "acba722c-d537-4335-9d52-aefa69595e57",
              "parentUUID": "c157d0e6-3afb-474c-82f7-93126da90e84",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should update the created resource",
              "fullTitle": "GraphQL FUNCTIONS API CRUD Tests should update the created resource",
              "timedOut": false,
              "duration": 238,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const queryPath = 'C:/Users/DELL/Downloads/AsbApiAutomation/Graphql_queries/Functions/UpdateFunction.graphql';\nconst query = await fs.readFile(queryPath, 'utf8');\nconst variablesPath = 'C:/Users/DELL/Downloads/AsbApiAutomation/Graphql_variables/Functions_var/UpdateFunction.json';\nconst updateVariables = JSON.parse(await fs.readFile(variablesPath, 'utf8'));\nupdateVariables.functionid = retrievedFunctionId;\ntry {\n  const updateResponse = await axios.post(\n    graphqlEndpoint,\n    { query, variables: updateVariables },\n    {\n      headers: authorizationHeader\n    }\n  );\n  expect(updateResponse.status).to.equal(200);\n} catch (error) {\n  console.error('GraphQL Error:', error.message);\n  console.log('GraphQL Response Data:', JSON.stringify(error.response?.data, null, 2));\n  throw error;\n}",
              "err": {},
              "uuid": "0edae0ef-4046-4ed6-9f3c-3ca3c848e4c6",
              "parentUUID": "c157d0e6-3afb-474c-82f7-93126da90e84",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should delete the created resource",
              "fullTitle": "GraphQL FUNCTIONS API CRUD Tests should delete the created resource",
              "timedOut": false,
              "duration": 769,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const queryPath = 'C:/Users/DELL/Downloads/AsbApiAutomation/Graphql_queries/Functions/DeleteFunction.graphql';\nconst query = await fs.readFile(queryPath, 'utf8');\nconst variablesPath = 'C:/Users/DELL/Downloads/AsbApiAutomation/Graphql_variables/Functions_var/DeleteFunction.json';\nconst deleteVariables = JSON.parse(await fs.readFile(variablesPath, 'utf8'));\ndeleteVariables.functionid = retrievedFunctionId;\ntry {\n  const deleteResponse = await axios.post(\n    graphqlEndpoint,\n    { query, variables: deleteVariables },\n    {\n      headers: authorizationHeader\n    }\n  );\n  expect(deleteResponse.status).to.equal(200);\n} catch (error) {\n  console.error('GraphQL Error:', error.message);\n  console.log('GraphQL Response Data:', JSON.stringify(error.response?.data, null, 2));\n  throw error;\n}",
              "err": {},
              "uuid": "50372a93-4015-4a38-b058-cc6fc0727664",
              "parentUUID": "c157d0e6-3afb-474c-82f7-93126da90e84",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7fae814e-892d-4ae2-9619-fc79360c257c",
            "acba722c-d537-4335-9d52-aefa69595e57",
            "0edae0ef-4046-4ed6-9f3c-3ca3c848e4c6",
            "50372a93-4015-4a38-b058-cc6fc0727664"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2256,
          "root": false,
          "rootEmpty": false,
          "_timeout": 3000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 3000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}